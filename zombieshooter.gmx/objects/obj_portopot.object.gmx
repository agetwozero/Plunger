<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_portopot</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Init
hp = floor(random(10)) + 10;
knockbacked = false;
knockback_time = 5;

//plunging
plunged = false;
plunging = false;
plunge_up = false;
plunges = floor(random(20)) + 20;
inradius = false;
doorfly = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Knockback timer

knockbacked = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Step

depth = -y;

if(knockbacked){    
    direction = point_direction(x,y,obj_player.x,obj_player.y) + 180;
    mp_potential_step(x + lengthdir_x(1000,direction), y + lengthdir_y(1000,direction), 8, true);
}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///plunging

if(hp &lt;= 0 &amp;&amp; !doorfly){
    instance_create(x,y,obj_effect_doorfly);
    doorfly = true;
}   

if(instance_exists(obj_player)){
    if(hp &lt;= 0 &amp;&amp; !plunged &amp;&amp; distance_to_object(obj_player) &lt;= 50){ 
    
        inradius = true;
        if(keyboard_check_pressed(ord('E'))){
            plunging = true;
        }
    }else{
        inradius = false;
    }
    
    //if plunging
    if(plunging){
        obj_player.x = x;
        obj_player.y = y - 50;
        obj_player.visible = false;
        obj_player.show_wep = false;
        
        if(plunge_up){
             if(keyboard_check_pressed(ord('W'))){
                plunges--;
                plunge_up = !plunge_up;
             }
        }else{
            if(keyboard_check_pressed(ord('S'))){
               plunges--;
               plunge_up = !plunge_up;
               obj_camera.isshaking = true;
               obj_camera.shake_intencity = 50;
               obj_camera.alarm[0] = 20;
               part_system_depth(global.ps,depth - 999999);
               part_particles_create(global.ps,x,y ,global.pt_water,10);
               part_particles_create(global.ps,x,y ,global.pt_smoke,5);
               instance_create(0,0,obj_effect_plunge);

            }
        }
        
        if(plunges &lt;= 0){
            plunging = false;
            plunged = true;
            obj_player.show_wep = true;
            obj_player.y += 100;
            obj_player.visible = true;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_bullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// -HP and knockback
hp -= 1;

direction = other.direction;
knockbacked = true;
alarm[0] = knockback_time;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Destroy bullet &amp;&amp; particles
part_system_depth(global.ps,depth - 5);
instance_destroy();

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Image_blend
image_blend = c_red;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draws self and door

if(plunged){
    draw_sprite(sprite_index,0,x,y);
}else{
    draw_sprite(sprite_index,1,x,y);
}
if(hp &gt; 0){
    draw_sprite(spr_portopot_door,0,x,y);
}

if(plunging){
    draw_sprite(spr_player_walking_front,0,x,y-50);
    if(plunge_up){
        draw_sprite(spr_buttons,1,x,y - 350)
        draw_sprite(spr_plunger,0,x,y);
    }else{
        draw_sprite(spr_buttons,2,x,y - 350);
        draw_sprite(spr_plunger,0,x,y  - 50 );
    }
}

if(inradius &amp;&amp; !plunging){
    draw_sprite(spr_buttons,3,x,y - 350);
}
depth = -y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>80,273</point>
    <point>160,160</point>
  </PhysicsShapePoints>
</object>
